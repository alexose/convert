#!/usr/bin/env node

var sys = require('sys'),
	program = require('commander'),
	fs = require('fs'),
	http = require('http'),
	https = require('https'),
	unzip = require('unzip'),
	wrench = require('wrench'),
    ejs = require('../ejs/ejsstrap.js'),
    jade = require('../jade/jadestrap.js'),
    hbs = require('../hbs/hbsstrap.js'),
    jshtml = require('../jshtml/jshtmlstrap.js');

var exec = require('child_process').exec;

function puts(error, stdout, stderr) {
	sys.puts(stdout)
}

program
  .version("1.0")
  .option('-s, --sessions', 'add session support')
  .option('-e, --ejs', 'add ejs engine support (defaults to jade)')
  .option('-J, --jshtml', 'add jshtml engine support (defaults to jade)')
  .option('-H, --hbs', 'add handlebars.js engine support')
  .option('-c, --css <engine>', 'add stylesheet <engine> support (less|stylus|sass) (defaults to plain css)')
  .option('-f, --force', 'force on non-empty directory')
  .parse(process.argv);

var path = program.args.shift() || '.';

runExpress(path, function() {
	var tmpExtractDir = "./tmp";
	var outputFilePath = tmpExtractDir + "/bootstrap.zip";
	fs.mkdirSync(tmpExtractDir);

	console.log("Downloading bootstrap...")
	downloadAndUnzipFile("http://twitter.github.com/bootstrap/assets/bootstrap.zip",tmpExtractDir,outputFilePath,function(){
  		var copyOptions = { preserve: true };
		wrench.copyDirSyncRecursive(tmpExtractDir + '/bootstrap/js/', path + '/public/javascripts' ,copyOptions);
		wrench.copyDirSyncRecursive(tmpExtractDir + '/bootstrap/img/', path + '/public/images' ,copyOptions);
		wrench.copyDirSyncRecursive(tmpExtractDir + '/bootstrap/css/', path + '/public/stylesheets' ,copyOptions);
		
  		createLayoutAndIndexFiles(path);
  		if(program.css){
  			addCssEngineSupport(path,tmpExtractDir,function(){
				wrench.rmdirSyncRecursive(tmpExtractDir);  				
  			});
  		}
  	});	
});

function runExpress(path, callback) {
	exec("express " + process.argv.slice(2).join(' '), function(error, stdout, stderr) {
		callback();
		sys.puts(stdout);
	})
}

function downloadAndUnzipFile(url,tmpExtractDir, outputFilePath, callback){
	var outputFile = fs.createWriteStream(outputFilePath);
	var protocall = http;
	if(url.indexOf('https') != -1){
		protocall = https;
	}
	var request = protocall.get(url, function(response) {
		response.on('end', function() {
			var extract = unzip.Extract({
				path: tmpExtractDir
			});
			extract.on('close', function() {
				callback();
			});

			fs.createReadStream(outputFilePath).pipe(extract);
		});

		response.pipe(outputFile);
	});
}

function createLayoutAndIndexFiles(path){
  if(program.ejs){
    ejs.createLayoutAndIndexFiles(path); 
  }
  else if(program.hbs){
  	hbs.createLayoutAndIndexFiles(path);
  }
  else if(program.jshtml){
  	jshtml.createLayoutAndIndexFiles(path);
  }
  else {
    jade.createLayoutAndIndexFiles(path);
  }
}

function addCssEngineSupport(path,tmpExtractDir,callback){
	switch(program.css){
		case 'less':
			addLessSupport(path,tmpExtractDir,callback);
			break;
		case 'stylus':
			addStylusSupport(path,tmpExtractDir,callback);
			break;
		case 'sass':
			addSassSupport(path,tmpExtractDir,callback);
			break;
	}
}

function addLessSupport(path, tmpExtractDir,callback){
	console.log("Downloading bootstrap less files...")
	downloadAndUnzipFile("https://nodeload.github.com/twitter/bootstrap/zip/master", tmpExtractDir,tmpExtractDir + "/bootstrap_master.zip",function(){
		wrench.rmdirSyncRecursive(tmpExtractDir + '/bootstrap-master/less/tests'); 
		wrench.copyDirSyncRecursive(tmpExtractDir + '/bootstrap-master/less/', path + '/public/stylesheets');
		callback();
	});
}

function addStylusSupport(path, tmpExtractDir,callback){
	// console.log("Downloading bootstrap stylus files...")
	// downloadAndUnzipFile("https://nodeload.github.com/shomeya/bootstrap-stylus/zip/v1.4.0-stylus", tmpExtractDir,tmpExtractDir + "/stylus_bootstrap_master.zip",function(){
	// 	wrench.copyDirSyncRecursive(tmpExtractDir + '/bootstrap-stylus-1.4.0-stylus/lib/', path + '/public/stylesheets');
	// 	callback();
	// });
}

function addSassSupport(path, tmpExtractDir,callback){
	// downloadAndUnzipFile("https://nodeload.github.com/jlong/sass-twitter-bootstrap/zip/master", tmpExtractDir,tmpExtractDir + "/sass_bootstrap_master.zip",function(){
	// 	wrench.rmdirSyncRecursive(tmpExtractDir + '/sass-twitter-bootstrap-master/lib/tests'); 
	// 	wrench.copyDirSyncRecursive(tmpExtractDir + '/sass-twitter-bootstrap-master/lib/', path + '/public/stylesheets');
	// 	callback();
	// });
}